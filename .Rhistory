library(devtools)
install.packages("roxygen2")
devtools::install_github("klutometis/roxygen")
library(roxygen2)
install("DataflowR2023")
setwd("~/DataflowR2023")
install("DataflowR2023")
document()
document()
setwd("..")
install("DataflowR2023")
dt <- streamclean(yearmon = 201802, gps = "eu", eummin = 12, c6mmin = 12, tofile = F)
getwd()
#Load older files that have undergone "hand cleaning"
dt <- streamparse(yearmon = 201007, tofile = FALSE)
#QA cleaned streaming data
streamqa(yearmon = 201802, parset = names(streamget(201802))[c(4:12, 16:22)])
#Load previously cleaned streaming data
dt <- streamget(yearmon = 201802, qa = TRUE)
yearmon=201512
gps="df"
c6mmin=6
dfmmin=7
sep = ","
fdir = getOption("fdir")
library(DataflowR2023)
fdir = getOption("fdir")
options(warn = -1)
fdir_fd <- file.path(fdir, "DF_FullDataSets", "Raw", "InstrumentOutput")
flist <- list.files(fdir_fd, include.dirs = T, full.names = T)
flist <- flist[substring(basename(flist), 1, 6) == yearmon]
dflist <- list.files(flist, pattern = c(".*.txt"), include.dirs = T,
full.names = T)
if (length(dflist) == 0) {
dflist <- list.files(flist, pattern = c(".*.TXT"), include.dirs = T,
full.names = T)
}
if (length(dflist) == 0) {
dflist <- list.files(flist, pattern = c(".*DF.csv"),
library(DataflowR2023)
dt <- streamget(yearmon = 202307, qa = TRUE)
View(dt)
getwd()
#Packages for creating new package
library(devtools)
#devtools::install_github("klutometis/roxygen")
library(roxygen2)
#setwd("\\\\ad.sfwmd.gov/dfsroot/userdata/kiallen/Docs/DataflowR2023")
setwd("C:/Documents/DataflowR2023")
document()
#Set wd to Docs
setwd("..")
